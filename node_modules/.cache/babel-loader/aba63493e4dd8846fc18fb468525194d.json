{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport NavigationContext from './NavigationContext';\nexport default function withNavigation(Component, config = {\n  forwardRef: true\n}) {\n  class ComponentWithNavigation extends React.Component {\n    render() {\n      const navigationProp = this.props.navigation;\n      return /*#__PURE__*/React.createElement(NavigationContext.Consumer, null, navigationContext => {\n        const navigation = navigationProp || navigationContext;\n        invariant(!!navigation, 'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');\n        return /*#__PURE__*/React.createElement(Component, _extends({}, this.props, {\n          navigation: navigation,\n          ref: config.forwardRef ? this.props.onRef : undefined\n        }));\n      });\n    }\n\n  }\n\n  _defineProperty(ComponentWithNavigation, \"displayName\", \"withNavigation(\".concat(Component.displayName || Component.name, \")\"));\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}","map":{"version":3,"sources":["withNavigation.js"],"names":["config","forwardRef","React","Component","render","navigationProp","navigationContext","navigation","invariant","undefined","hoistStatics"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AACA,OAAA,iBAAA,MAAA,qBAAA;AAEA,eAAe,SAAA,cAAA,CAAA,SAAA,EAEbA,MAAM,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAFI,EAGb;AACA,QAAA,uBAAA,SAAsCC,KAAK,CAA3C,SAAA,CAAsD;AAKpDE,IAAAA,MAAM,GAAG;AACP,YAAMC,cAAc,GAAG,KAAA,KAAA,CAAvB,UAAA;AACA,aAAA,aACE,KAAA,CAAA,aAAA,CAAC,iBAAD,CAAA,QAAA,EAAA,IAAA,EACIC,iBAAD,IAAuB;AACtB,cAAMC,UAAU,GAAGF,cAAc,IAAjC,iBAAA;AACAG,QAAAA,SAAS,CACP,CAAC,CADM,UAAA,EAATA,wJAAS,CAATA;AAIA,eAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,UAAA,UAAU,EAFZ,UAAA;AAGE,UAAA,GAAG,EAAER,MAAM,CAANA,UAAAA,GAAoB,KAAA,KAAA,CAApBA,KAAAA,GAAuCS;AAH9C,SAAA,CAAA,CADF;AARN,OACE,CADF;AAkBD;;AAzBmD;;AADtD,EAAA,eAAA,CAAA,uBAAA,EAAA,aAAA,EAAA,kBAAA,MAAA,CAGIN,SAAS,CAATA,WAAAA,IAAyBA,SAAS,CAHtC,IAAA,EAAA,GAAA,CAAA,CAAA;;AA6BA,SAAOO,YAAY,CAAA,uBAAA,EAAnB,SAAmB,CAAnB;AACD","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport NavigationContext from './NavigationContext';\n\nexport default function withNavigation(\n  Component,\n  config = { forwardRef: true }\n) {\n  class ComponentWithNavigation extends React.Component {\n    static displayName = `withNavigation(${\n      Component.displayName || Component.name\n    })`;\n\n    render() {\n      const navigationProp = this.props.navigation;\n      return (\n        <NavigationContext.Consumer>\n          {(navigationContext) => {\n            const navigation = navigationProp || navigationContext;\n            invariant(\n              !!navigation,\n              'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.'\n            );\n            return (\n              <Component\n                {...this.props}\n                navigation={navigation}\n                ref={config.forwardRef ? this.props.onRef : undefined}\n              />\n            );\n          }}\n        </NavigationContext.Consumer>\n      );\n    }\n  }\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}\n"]},"metadata":{},"sourceType":"module"}