(this.webpackJsonppathfinder_visualization=this.webpackJsonppathfinder_visualization||[]).push([[0],[,,,,,,function(e,t,a){},,function(e,t,a){},,function(e,t,a){},,,function(e,t,a){e.exports=a(42)},,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){e.exports=a.p+"static/media/destination.68b640b1.gif"},function(e,t,a){e.exports=a.p+"static/media/bfs.9542cb4a.gif"},function(e,t,a){e.exports=a.p+"static/media/toggleobstacle.b12eb630.gif"},function(e,t,a){e.exports=a.p+"static/media/dragobstacle.f1f2d758.gif"},function(e,t,a){e.exports=a.p+"static/media/dragstartend.df145adb.gif"},function(e,t,a){e.exports=a.p+"static/media/choosealgorithm.7cdd122f.gif"},function(e,t,a){e.exports=a.p+"static/media/adjustspeed.aea4ee89.gif"},function(e,t,a){e.exports=a.p+"static/media/clear.90104cba.gif"},function(e,t,a){e.exports=a.p+"static/media/reset.be9999d0.gif"},function(e,t,a){e.exports=a.p+"static/media/randomize.4d84657e.gif"},function(e,t,a){e.exports=a.p+"static/media/simulate.b7235db6.gif"},function(e,t,a){},function(e,t,a){e.exports=a.p+"static/media/astarslow.9df4bd54.gif"},function(e,t,a){e.exports=a.p+"static/media/dijkstraslow.18bd6645.gif"},function(e,t,a){e.exports=a.p+"static/media/gbfslow.53838dab.gif"},function(e,t,a){e.exports=a.p+"static/media/bfsslow.dbb9fe6b.gif"},function(e,t,a){e.exports=a.p+"static/media/dfsslow.fc9dc19b.gif"},function(e,t,a){e.exports=a.p+"static/media/stack.95bfb4af.gif"},function(e,t,a){e.exports=a.p+"static/media/queue.27136a69.gif"},function(e,t,a){e.exports=a.p+"static/media/heap.a6a90c10.gif"},,function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),o=a(12),s=a.n(o),i=(a(18),a(1)),l=a(2),c=a(5),u=a(4),h=a(3),m=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).handleNavBarClick=function(e){n.node.contains(e.target)||n.setState({activeDropDown:null})},n.state={},n}return Object(l.a)(a,[{key:"componentDidMount",value:function(){document.addEventListener("click",this.handleNavBarClick,!1)}},{key:"componentWillUnmount",value:function(){document.removeEventListener("click",this.handleNavBarClick,!1)}},{key:"showDropdown",value:function(e,t){e.preventDefault(),"algorithm"===t?this.setState({activeDropDown:"algorithm"}):"speed"===t?this.setState({activeDropDown:"speed"}):"aboutAlgo"===t?this.setState({activeDropDown:"aboutAlgo"}):"aboutStruct"===t&&this.setState({activeDropDown:"aboutStruct"})}},{key:"render",value:function(){var e=this,t=this.props,a=t.tutorialEnabled,n=t.mouseHold,o=t.aboutAlgorithmEnabled,s=t.aboutDataStructureEnabled,i=a||n||o||s?"nav-link disabled dropdown-toggle":"nav-link dropdown-toggle",l=a||n||o||s?"nav-link disabled":"nav-link",c="dropdown-menu"+("algorithm"===this.state.activeDropDown?" show":""),u="dropdown-item"+("A*"===this.props.activeAlgorithm?" active":""),h="dropdown-item"+("Dijkstra"===this.props.activeAlgorithm?" active":""),m="dropdown-item"+("GBF"===this.props.activeAlgorithm?" active":""),d="dropdown-item"+("BFS"===this.props.activeAlgorithm?" active":""),p="dropdown-item"+("DFS"===this.props.activeAlgorithm?" active":""),b="dropdown-menu"+("speed"===this.state.activeDropDown?" show":""),f="dropdown-item"+(.25===this.props.simulatorSpeed?" active":""),g="dropdown-item"+(.5===this.props.simulatorSpeed?" active":""),v="dropdown-item"+(.75===this.props.simulatorSpeed?" active":""),k="dropdown-item"+(1===this.props.simulatorSpeed?" active":""),E="dropdown-item"+(2===this.props.simulatorSpeed?" active":""),N="dropdown-item"+(4===this.props.simulatorSpeed?" active":""),S="dropdown-menu"+("aboutAlgo"===this.state.activeDropDown?" show":""),w="dropdown-menu"+("aboutStruct"===this.state.activeDropDown?" show":"");return r.a.createElement("div",{ref:function(t){return e.node=t}},r.a.createElement("nav",{className:"navbar navbar-expand-lg navbar-dark bg-dark"},r.a.createElement("a",{className:"navbar-brand",href:"/"},"Pathfinder Simulator"),r.a.createElement("button",{className:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarSupportedContent","aria-controls":"navbarSupportedContent","aria-expanded":"false","aria-label":"Toggle navigation"},r.a.createElement("span",{className:"navbar-toggler-icon"})),r.a.createElement("div",{className:"collapse navbar-collapse",id:"navbarSupportedContent"},r.a.createElement("ul",{className:"navbar-nav mr-auto"},r.a.createElement("li",{className:"nav-item dropdown"},r.a.createElement("a",{className:i,href:"/#",id:"navbarDropdown",role:"button","data-toggle":"dropdown","aria-haspopup":"true","aria-expanded":"false",onClick:function(t){e.showDropdown(t,"algorithm")}},"Choose Algorithm: ",this.props.activeAlgorithm),r.a.createElement("div",{className:c,style:{cursor:"pointer"},"aria-labelledby":"navbarDropdown"},r.a.createElement("a",{className:u,style:{cursor:"pointer"},onClick:function(t){e.props.onClickAlgorithm(t,"A*"),e.setState({activeDropDown:null})}},"A*"),r.a.createElement("a",{className:h,style:{cursor:"pointer"},onClick:function(t){e.props.onClickAlgorithm(t,"Dijkstra"),e.setState({activeDropDown:null})}},"Dijkstra"),r.a.createElement("a",{className:m,style:{cursor:"pointer"},onClick:function(t){e.props.onClickAlgorithm(t,"GBF"),e.setState({activeDropDown:null})}},"Greedy-Best-First"),r.a.createElement("a",{className:d,style:{cursor:"pointer"},onClick:function(t){e.props.onClickAlgorithm(t,"BFS"),e.setState({activeDropDown:null})}},"Breadth-First-Search"),r.a.createElement("a",{className:p,style:{cursor:"pointer"},onClick:function(t){e.props.onClickAlgorithm(t,"DFS"),e.setState({activeDropDown:null})}},"Depth-First-Search"))),r.a.createElement("li",{className:"nav-item dropdown"},r.a.createElement("a",{className:i,style:{cursor:"pointer"},id:"navbarDropdown",role:"button","data-toggle":"dropdown","aria-haspopup":"true","aria-expanded":"false",onClick:function(t){e.showDropdown(t,"speed")}},"Adjust Simulation Speed: ",100*this.props.simulatorSpeed,"%"),r.a.createElement("div",{className:b,"aria-labelledby":"navbarDropdown"},r.a.createElement("a",{className:f,style:{cursor:"pointer"},onClick:function(t){e.props.onClickSpeed(t,.25),e.setState({activeDropDown:null})}},"25%"),r.a.createElement("a",{className:g,style:{cursor:"pointer"},onClick:function(t){e.props.onClickSpeed(t,.5),e.setState({activeDropDown:null})}},"50%"),r.a.createElement("a",{className:v,style:{cursor:"pointer"},onClick:function(t){e.props.onClickSpeed(t,.75),e.setState({activeDropDown:null})}},"75%"),r.a.createElement("a",{className:k,style:{cursor:"pointer"},onClick:function(t){e.props.onClickSpeed(t,1),e.setState({activeDropDown:null})}},"100%"),r.a.createElement("a",{className:E,style:{cursor:"pointer"},onClick:function(t){e.props.onClickSpeed(t,2),e.setState({activeDropDown:null})}},"200%"),r.a.createElement("a",{className:N,style:{cursor:"pointer"},onClick:function(t){e.props.onClickSpeed(t,4),e.setState({activeDropDown:null})}},"400%"))),r.a.createElement("li",{className:"nav-item dropdown"},r.a.createElement("a",{className:i,style:{cursor:"pointer"},id:"navbarDropdown",role:"button","data-toggle":"dropdown","aria-haspopup":"true","aria-expanded":"false",onClick:function(t){e.showDropdown(t,"aboutAlgo")}},"About Pathfinding Algorithms"),r.a.createElement("div",{className:S,"aria-labelledby":"navbarDropdown"},r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutAlgorithm("A*"),e.setState({activeDropDown:null})}},"A*"),r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutAlgorithm("Dijkstra"),e.setState({activeDropDown:null})}},"Dijkstra"),r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutAlgorithm("GBF"),e.setState({activeDropDown:null})}},"Greedy-Best-First"),r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutAlgorithm("BFS"),e.setState({activeDropDown:null})}},"Breadth-First-Search"),r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutAlgorithm("DFS"),e.setState({activeDropDown:null})}},"Depth-First-Search"))),r.a.createElement("li",{className:"nav-item dropdown"},r.a.createElement("a",{className:i,style:{cursor:"pointer"},id:"navbarDropdown",role:"button","data-toggle":"dropdown","aria-haspopup":"true","aria-expanded":"false",onClick:function(t){e.showDropdown(t,"aboutStruct")}},"About Pathfinding Data Structures"),r.a.createElement("div",{className:w,"aria-labelledby":"navbarDropdown"},r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutDataStructure("Stack"),e.setState({activeDropDown:null})}},"Stack"),r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutDataStructure("Queue"),e.setState({activeDropDown:null})}},"Queue"),r.a.createElement("a",{className:"dropdown-item",style:{cursor:"pointer"},onClick:function(){e.props.onClickAboutDataStructure("Heap"),e.setState({activeDropDown:null})}},"Heap"))),r.a.createElement("li",{className:"nav-item"},r.a.createElement("a",{className:l,style:{cursor:"pointer"},onClick:function(t){e.props.createTutorialEvent(),e.setState({activeDropDown:null})}},"Instructions ",r.a.createElement("span",{className:"sr-only"},"(current)")))))))}}]),a}(n.Component),d=a(9),p=(a(19),function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={},n}return Object(l.a)(a,[{key:"render",value:function(){var e=this.props,t=e.row,a=e.col,n=e.isStartNode,o=e.isEndNode,s=e.isVisited,i=e.isObstacle,l=e.onMouseDown,c=e.onMouseEnter,u=e.onMouseOut,h=e.onMouseUp,m=n?"node-start":o?"node-end":s?"node-visited":i?"node-obstacle":"";return r.a.createElement("div",{id:"node-".concat(t,"-").concat(a),className:"node ".concat(m),onMouseDown:function(){return l(t,a)},onMouseEnter:function(){return c(t,a)},onMouseOut:function(){return u(t,a)},onMouseUp:function(){return h(t,a)}})}}]),a}(n.Component)),b=(a(20),a(7));var f=function(e,t){return Math.sqrt((e.col-t.col)*(e.col-t.col)+(e.row-t.row)*(e.row-t.row))},g=function(e){for(var t=0;t<e.length;t++)for(var a=0;a<e[t].length;a++)t<e.length-1&&e[t][a].neighborNodes.push(e[t+1][a]),t>0&&e[t][a].neighborNodes.push(e[t-1][a]),a<e[t].length-1&&e[t][a].neighborNodes.push(e[t][a+1]),a>0&&e[t][a].neighborNodes.push(e[t][a-1]),t>0&&a>0&&e[t][a].neighborNodes.push(e[t-1][a-1]),t<e.length-1&&a>0&&e[t][a].neighborNodes.push(e[t+1][a-1]),t>0&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t-1][a+1]),t<e.length-1&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t+1][a+1])};var v=function(e,t){return Math.sqrt((e.col-t.col)*(e.col-t.col)+(e.row-t.row)*(e.row-t.row))},k=function(e){for(var t=0;t<e.length;t++)for(var a=0;a<e[t].length;a++)t<e.length-1&&e[t][a].neighborNodes.push(e[t+1][a]),t>0&&e[t][a].neighborNodes.push(e[t-1][a]),a<e[t].length-1&&e[t][a].neighborNodes.push(e[t][a+1]),a>0&&e[t][a].neighborNodes.push(e[t][a-1]),t>0&&a>0&&e[t][a].neighborNodes.push(e[t-1][a-1]),t<e.length-1&&a>0&&e[t][a].neighborNodes.push(e[t+1][a-1]),t>0&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t-1][a+1]),t<e.length-1&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t+1][a+1])};var E=function(e,t){return Math.sqrt((e.col-t.col)*(e.col-t.col)+(e.row-t.row)*(e.row-t.row))},N=function(e){for(var t=0;t<e.length;t++)for(var a=0;a<e[t].length;a++)t<e.length-1&&e[t][a].neighborNodes.push(e[t+1][a]),t>0&&e[t][a].neighborNodes.push(e[t-1][a]),a<e[t].length-1&&e[t][a].neighborNodes.push(e[t][a+1]),a>0&&e[t][a].neighborNodes.push(e[t][a-1]),t>0&&a>0&&e[t][a].neighborNodes.push(e[t-1][a-1]),t<e.length-1&&a>0&&e[t][a].neighborNodes.push(e[t+1][a-1]),t>0&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t-1][a+1]),t<e.length-1&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t+1][a+1])},S=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={items:[]},n}return Object(l.a)(a,[{key:"push",value:function(e){this.state.items.push(e)}},{key:"pop",value:function(){return this.isEmpty()?"Underflow":this.state.items.shift()}},{key:"front",value:function(){return this.isEmpty()?"No elements in Queue":this.state.items[0]}},{key:"isEmpty",value:function(){return 0===this.state.items.length}},{key:"render",value:function(){}}]),a}(n.Component);var w=function(e){for(var t=0;t<e.length;t++)for(var a=0;a<e[t].length;a++)t<e.length-1&&e[t][a].neighborNodes.push(e[t+1][a]),t>0&&e[t][a].neighborNodes.push(e[t-1][a]),a<e[t].length-1&&e[t][a].neighborNodes.push(e[t][a+1]),a>0&&e[t][a].neighborNodes.push(e[t][a-1]),t>0&&a>0&&e[t][a].neighborNodes.push(e[t-1][a-1]),t<e.length-1&&a>0&&e[t][a].neighborNodes.push(e[t+1][a-1]),t>0&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t-1][a+1]),t<e.length-1&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t+1][a+1])},y=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={items:[]},n}return Object(l.a)(a,[{key:"push",value:function(e){this.state.items.push(e)}},{key:"pop",value:function(){return this.isEmpty()?"Underflow":this.state.items.pop()}},{key:"top",value:function(){return this.isEmpty()?"No elements in Stack":this.state.items[this.state.items.length-1]}},{key:"isEmpty",value:function(){return 0===this.state.items.length}},{key:"render",value:function(){}}]),a}(n.Component);var O=function(e){for(var t=0;t<e.length;t++)for(var a=0;a<e[t].length;a++)t>0&&a>0&&e[t][a].neighborNodes.push(e[t-1][a-1]),t<e.length-1&&a>0&&e[t][a].neighborNodes.push(e[t+1][a-1]),t>0&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t-1][a+1]),t<e.length-1&&a<e[t].length-1&&e[t][a].neighborNodes.push(e[t+1][a+1]),t<e.length-1&&e[t][a].neighborNodes.push(e[t+1][a]),a<e[t].length-1&&e[t][a].neighborNodes.push(e[t][a+1]),t>0&&e[t][a].neighborNodes.push(e[t-1][a]),a>0&&e[t][a].neighborNodes.push(e[t][a-1])},C=[],j=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={grid:[],startNode:{},endNode:{},startCancelPos:{},endCancelPos:{},mouseIsPressed:!1,mouseHoldsStart:!1,mouseHoldsEnd:!1,disableClicking:!1,tutorialEnabled:!1},n}return Object(l.a)(a,[{key:"componentDidMount",value:function(){var e={row:24,col:59},t=this.createGrid({row:0,col:0},e);this.setState({grid:t})}},{key:"onTutorialEnabled",value:function(){this.setState({disableClicking:!0})}},{key:"onTutorialDisabled",value:function(){this.setState({disableClicking:!1})}},{key:"handleMouseDown",value:function(e,t,a){var n=this.state,r=n.grid,o=n.startNode,s=n.endNode,i=n.disableClicking,l=n.mouseHoldsStart,c=n.mouseHoldsEnd;if(!(i||a||l||c))if(e===o.row&&t===o.col)this.setState({mouseIsPressed:!0,mouseHoldsStart:!0,savedGrid:r,startCancelPos:{row:e,col:t}}),this.props.mouseHoldOnEvent();else if(e===s.row&&t===s.col)this.setState({mouseIsPressed:!0,mouseHoldsEnd:!0,endCancelPos:{row:e,col:t}}),this.props.mouseHoldOnEvent();else{var u=A(this.state.grid,e,t);this.setState({grid:u,mouseIsPressed:!0})}}},{key:"handleMouseUp",value:function(e,t){var a=this.state,n=a.grid,r=a.mouseHoldsStart,o=a.mouseHoldsEnd,s=a.startCancelPos,i=a.endCancelPos,l=this.props,c=l.tutorialEnabled,u=l.aboutAlgorithmEnabled,h=l.aboutDataStructureEnabled,m=n[e][t];if(!(c||u||h)){if(r){if(m.isEndNode||m.isObstacle){var d=P(n,s.row,s.col);return this.setState({mouseHoldsStart:!1,mouseHoldsEnd:!1,mouseIsPressed:!1,grid:d,startNode:n[s.row][s.col]}),void this.props.mouseHoldOffEvent()}this.setState({startNode:m})}else if(o){if(m.isStartNode||m.isObstacle){var p=x(this.state.grid,i.row,i.col);return this.setState({mouseHoldsStart:!1,mouseHoldsEnd:!1,mouseIsPressed:!1,grid:p,endNode:n[i.row][i.col]}),void this.props.mouseHoldOffEvent()}this.setState({endNode:m})}this.setState({mouseHoldsStart:!1,mouseHoldsEnd:!1,mouseIsPressed:!1}),this.props.mouseHoldOffEvent()}}},{key:"handleMouseOut",value:function(e,t){if(this.state.mouseIsPressed){var a=this.state.grid;if(this.state.mouseHoldsStart){if(a[e][t].isEndNode||a[e][t].isObstacle)return;var n=P(this.state.grid,e,t);this.setState({grid:n})}if(this.state.mouseHoldsEnd){if(a[e][t].isStartNode||a[e][t].isObstacle)return;var r=x(this.state.grid,e,t);this.setState({grid:r})}}}},{key:"handleMouseEnter",value:function(e,t){if(this.state.mouseIsPressed){var a=this.state.grid;if(this.state.mouseHoldsStart){if(a[e][t].isEndNode||a[e][t].isObstacle)return;var n=P(this.state.grid,e,t);this.setState({grid:n})}else if(this.state.mouseHoldsEnd){if(a[e][t].isStartNode||a[e][t].isObstacle)return;var r=x(this.state.grid,e,t);this.setState({grid:r})}else{if(a[e][t].isStartNode||a[e][t].isEndNode)return;var o=A(this.state.grid,e,t);this.setState({grid:o})}}}},{key:"animateNodeList",value:function(e,t){for(var a=this,n=50/(5*this.props.simulatorSpeed),r=function(r){if(r===e.length)return C.push(setTimeout((function(){a.animateShortestPath(t)}),n*r)),{v:void 0};C.push(setTimeout((function(){var t=e[r];document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-visited"}),n*r))},o=0;o<=e.length;o++){var s=r(o);if("object"===typeof s)return s.v}}},{key:"animateShortestPath",value:function(e){for(var t=function(t){C.push(setTimeout((function(){var a=e[t];document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-shortest-path"}),40*t))},a=0;a<e.length;a++)t(a)}},{key:"cancelTimeouts",value:function(){for(var e=0;e<C.length;e++)clearTimeout(C[e]);C=[]}},{key:"resetGridStyles",value:function(e){this.setState({cancelSearch:!0});for(var t=0;t<25;t++)for(var a=0;a<60;a++){var n=e[t][a];n.isStartNode||n.isEndNode||(document.getElementById("node-".concat(n.row,"-").concat(n.col)).className="node node")}}},{key:"createGrid",value:function(e,t){for(var a=[],n=0;n<25;n++){for(var r=[],o=0;o<60;o++){var s=D(n,o);n===e.row&&o===e.col&&(s.isStartNode=!0,this.setState({startNode:s})),n===t.row&&o===t.col&&(s.isEndNode=!0,this.setState({endNode:s})),r.push(s)}a.push(r)}return a}},{key:"randomizeObstacles",value:function(){for(var e=this.state,t=e.startNode,a=e.endNode,n={row:t.row,col:t.col},r={row:a.row,col:a.col},o=this.createGrid(n,r),s=0;s<25;s++)for(var i=0;i<60;i++){if(!(n.row===s&&n.col===i||r.row===s&&r.col===i))if(Math.floor(10*Math.random()+1)<=3){var l=o[s][i];l.isObstacle=!0,document.getElementById("node-".concat(l.row,"-").concat(l.col)).className="node node-obstacle"}}this.setState({grid:o,disableClicking:!1})}},{key:"resetPath",value:function(){for(var e=this.state,t=e.grid,a=e.startNode,n=e.endNode,r={row:a.row,col:a.col},o={row:n.row,col:n.col},s=this.createGrid(r,o),i=0;i<25;i++)for(var l=0;l<60;l++){var c=s[i][l];c.isObstacle=t[i][l].isObstacle,c.isObstacle&&(document.getElementById("node-".concat(c.row,"-").concat(c.col)).className="node node-obstacle")}this.setState({grid:s,disableClicking:!1})}},{key:"visualizeAlgorithm",value:function(e,t,a){this.setState({disableClicking:!0,cancelSearch:!1});var n=this.props.activeAlgorithm,r=[];"A*"===n?r=function(e,t,a){if(!t||!a||t===a)return!1;g(e);var n=[];t.g=0,t.h=f(t,a),t.f=t.g+t.h;var r=new b.a((function(e,t){return e.f-t.f}));for(r.push(t);r.length>0;){for(;r.length>0&&r.peek().isVisited;)r.remove();if(!(r.length>0))return n;var o=r.peek();o.isVisited=!0,o!==t&&o!==a&&n.push(o);for(var s=0;s<o.neighborNodes.length;s++){var i=o.neighborNodes[s],l=o.g+f(o,i);if(l<i.g&&(i.parentNode=o,i.g=l,i.h=f(i,a),i.f=i.g+i.h,i.isVisited||i.isObstacle||r.push(i),i===a))return n}}}(e,t,a):"Dijkstra"===n?r=function(e,t,a){if(!t||!a||t===a)return!1;k(e);var n=[];t.g=0,t.f=t.g;var r=new b.a((function(e,t){return e.f-t.f}));for(r.push(t);r.length>0;){for(;r.length>0&&r.peek().isVisited;)r.pop();if(!(r.length>0))return n;var o=r.peek();o.isVisited=!0,o!==t&&o!==a&&n.push(o);for(var s=0;s<o.neighborNodes.length;s++){var i=o.neighborNodes[s],l=o.g+v(o,i);if(l<i.g&&(i.parentNode=o,i.g=l,i.f=i.g),i.isVisited||i.isObstacle||r.push(i),i===a)return n}}}(e,t,a):"GBF"===n?r=function(e,t,a){if(!t||!a||t===a)return!1;N(e);var n=[];t.g=0,t.h=E(t,a),t.f=t.h;var r=new b.a((function(e,t){return e.f-t.f}));for(r.push(t);r.length>0;){for(;r.length>0&&r.peek().isVisited;)r.pop();if(!(r.length>0))return n;var o=r.peek();o.isVisited=!0,o!==t&&o!==a&&n.push(o);for(var s=0;s<o.neighborNodes.length;s++){var i=o.neighborNodes[s],l=o.g+E(o,i);if(l<i.g&&(i.parentNode=o,i.g=l,i.h=E(i,a),i.f=i.h,i.isVisited||i.isObstacle||r.push(i),i===a))return n}}}(e,t,a):"BFS"===n?r=function(e,t,a){if(!t||!a||t===a)return!1;w(e);var n=[],r=new S;for(r.push(t);!r.isEmpty();){for(;!r.isEmpty()&&r.front().isVisited;)r.pop();if(r.isEmpty())return n;var o=r.front();o.isVisited=!0,o!==t&&o!==a&&n.push(o);for(var s=0;s<o.neighborNodes.length;s++){var i=o.neighborNodes[s];if(!i.isVisited&&!i.isObstacle&&(i.parentNode||(i.parentNode=o),r.push(i),i===a))return n}}}(e,t,a):"DFS"===n&&(r=function(e,t,a){if(!t||!a||t===a)return!1;O(e);var n=[],r=new y;for(r.push(t);!r.isEmpty();){for(;!r.isEmpty()&&r.top().isVisited;)r.pop();if(r.isEmpty())return n;var o=r.top();o.isVisited=!0,o!==t&&o!==a&&n.push(o);for(var s=0;s<o.neighborNodes.length;s++){var i=o.neighborNodes[s];if(!i.isVisited&&!i.isObstacle&&(i.parentNode=o,r.push(i),i===a))return n}}}(e,t,a));var o=F(a);this.animateNodeList(r,o)}},{key:"resetObstacles",value:function(){this.setState({cancelSearch:!0});var e=this.state,t=e.startNode,a=e.endNode,n={row:t.row,col:t.col},r={row:a.row,col:a.col},o=this.createGrid(n,r),s=o[t.row][t.col],i=o[a.row][a.col];s.isStartNode=!0,i.isEndNode=!0,this.setState({startNode:s,endNode:i,grid:o,disableClicking:!1})}},{key:"render",value:function(){var e=this,t=this.state,a=t.grid,n=t.mouseIsPressed,o=t.startNode,s=t.endNode,i=t.disableClicking,l=t.mouseHoldsStart,c=t.mouseHoldsEnd,u=this.props,h=u.tutorialEnabled,m=u.aboutAlgorithmEnabled,d=u.aboutDataStructureEnabled,b=h||m||d,f=i||l||c?"button-simulate-red":"button-simulate",g=l||c?"button-clear-red":"button-clear",v=l||c?"button-reset-red":"button-reset",k=l||c?"button-randomize-red":"button-randomize";return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"button-panel-container"},r.a.createElement("div",{className:"button-panel"},r.a.createElement("div",{className:"button-group"},r.a.createElement("button",{className:f,onClick:function(){e.visualizeAlgorithm(a,o,s)},disabled:i||b||l||c},"Simulate"),r.a.createElement("button",{className:g,onClick:function(){e.cancelTimeouts(),e.resetGridStyles(a),e.resetPath()},disabled:b||l||c},"Reset Path"),r.a.createElement("button",{className:v,onClick:function(){e.cancelTimeouts(),e.resetGridStyles(a),e.resetObstacles()},disabled:b||l||c},"Reset Obstacles"),r.a.createElement("button",{className:k,onClick:function(){e.cancelTimeouts(),e.resetGridStyles(a),e.randomizeObstacles()},disabled:b||l||c},"Randomize Obstacles")))),r.a.createElement("div",{className:"grid"},a.map((function(t,a){return r.a.createElement("div",{key:a},t.map((function(t,a){var o=t.row,s=t.col,i=t.isStartNode,l=t.isEndNode,c=t.isObstacle;return r.a.createElement(p,{key:a,row:o,col:s,isStartNode:i,isEndNode:l,isObstacle:c,mouseIsPressed:n,onMouseOut:function(t,a){return e.handleMouseOut(t,a)},onMouseDown:function(t,a){return e.handleMouseDown(t,a,b)},onMouseEnter:function(t,a){return e.handleMouseEnter(t,a)},onMouseUp:function(t,a){return e.handleMouseUp(t,a)}})})))}))))}}]),a}(n.Component),D=function(e,t){return{row:e,col:t,g:1/0,h:1/0,isStartNode:!1,isEndNode:!1,isVisited:!1,isObstacle:!1,neighborNodes:[],parentNode:null}},A=function(e,t,a){var n=e.slice(),r=n[t][a],o=Object(d.a)({},r,{isObstacle:!r.isObstacle});return n[t][a]=o,n},P=function(e,t,a){var n=e.slice(),r=n[t][a],o=Object(d.a)({},r,{isStartNode:!r.isStartNode});return n[t][a]=o,n},x=function(e,t,a){var n=e.slice(),r=n[t][a],o=Object(d.a)({},r,{isEndNode:!r.isEndNode});return n[t][a]=o,n},F=function(e){if(null===e.parentNode)return[];for(var t=[],a=e.parentNode;a.parentNode;)t.push(a),a=a.parentNode;return t},T=(a(6),function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Welcome to the Pathfinding Simulator"),r.a.createElement("img",{className:"welcome-image",src:a(21),alt:"Welcome"}),r.a.createElement("p",{className:"paragraph"},'If you want to skip the tutorial, feel free to press "Skip". Press "Next" to continue!'),r.a.createElement("div",{className:"page"},"1/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component)),H=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"What is Pathfinding?"),r.a.createElement("img",{className:"small-image",src:a(22),alt:"Pathfinding"}),r.a.createElement("p",{className:"paragraph"},'Pathfinding algorithms seek to find a path from a starting point to an end point. Some path algorithms are tuned to find the shortest path while others just find an available path. You can click on the "About Pathfinding Algorithms" dropdown to learn more about each algorithm and how they individually work. Some of these algorithms are used by routing apps such as Uber, Lyft, and Google Maps. Their search algorithms will quickly search the area and use roads as an agent to expand to the destination. In our case, we will just use grid cells as our "available roads" to keep things simple. Click next to learn about the controls of the simulator!'),r.a.createElement("div",{className:"page"},"2/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),B=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Placing Obstacles"),r.a.createElement("h6",{className:"sub-title"},"Activate any obstacle by simply clicking on an empty grid cell. Clicking on the obstacle again will deactivate it."),r.a.createElement("img",{className:"tutorial-image",src:a(23),alt:"Toggle obstacle example"}),r.a.createElement("div",{className:"page"},"3/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),M=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Placing Multiple Obstacles"),r.a.createElement("h6",{className:"sub-title"},"Press and drag on empty cells to continously activate obstacles. Pressing and dragging over obstacles will continously deactivate them."),r.a.createElement("img",{className:"tutorial-image",src:a(24),alt:"Mutliple obstacles example"}),r.a.createElement("div",{className:"page"},"4/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),I=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Positioning the Start and End Nodes"),r.a.createElement("h6",{className:"sub-title"},"Drag and drop either the start (green) or end (red) node on an empty cell to reposition the node."),r.a.createElement("img",{className:"tutorial-image",src:a(25),alt:"Start and end points example"}),r.a.createElement("div",{className:"page"},"5/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),G=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Choosing an Algorithm"),r.a.createElement("h6",{className:"sub-title"},'Select the "Choose Algorithm" dropdown to choose which pathfinding algorithm you would like to simulate.'),r.a.createElement("img",{className:"dropdown-image-algorithm",src:a(26),alt:"Choose algorithm example"}),r.a.createElement("div",{className:"page"},"6/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),_=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Adjusting Simulation Speed"),r.a.createElement("h6",{className:"sub-title"},'Select the "Adjust Simulation Speed" dropdown to adjust the animation search speed of the simulator.'),r.a.createElement("img",{className:"dropdown-image-speed",src:a(27),alt:"Adjust speed example"}),r.a.createElement("div",{className:"page"},"7/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),q=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Clearing the Simulated Search"),r.a.createElement("h6",{className:"sub-title"},'Select the "Reset Path" button to clear the path.'),r.a.createElement("img",{className:"button-image",src:a(28),alt:"Clear example"}),r.a.createElement("div",{className:"page"},"9/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),V=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Clearing All Obstacles"),r.a.createElement("h6",{className:"sub-title"},'Select the "Reset Obstacles" button to clear all placed obstacles.'),r.a.createElement("img",{className:"button-image",src:a(29),alt:"Reset example"}),r.a.createElement("div",{className:"page"},"10/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),z=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Generating Random Obstacles"),r.a.createElement("h6",{className:"sub-title"},'Select the "Randomize Obstacles" button to randomly generate obstacles over the grid.'),r.a.createElement("img",{className:"button-image",src:a(30),alt:"Randomize obstacle example"}),r.a.createElement("div",{className:"page"},"11/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),R=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Simulating the Pathfinding Search"),r.a.createElement("h6",{className:"sub-title"},'Select the "Simulate" button to start the pathfinding search. The blue cells represent nodes that were checked for a path while the yellow cells represent the final result path from the algorithm.'),r.a.createElement("img",{className:"button-image",src:a(31),alt:"Simulate example"}),r.a.createElement("div",{className:"page"},"8/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.incrementPage()}},"Next"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),n}(n.Component),U=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={},n}return Object(l.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"That's it!"),r.a.createElement("h6",{className:"sub-title"},'Find more information about the algorithms and data structures behind the simulator in the "About Pathfinding Algorithms" and "About Data Structures" dropdowns.'),r.a.createElement("p",{className:"paragraph"},"This repo can be found at:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/",target:"_blank",rel:"noopener noreferrer"},"GitHub Link"),r.a.createElement("br",null)," Contact: Milan.Fatschel@gmail.com"),r.a.createElement("div",{className:"page"},"12/12"),r.a.createElement("button",{className:"next",onClick:function(){e.props.skip()}},"Finish"),r.a.createElement("button",{className:"previous",onClick:function(){e.props.decrementPage()}},"Previous"),r.a.createElement("button",{className:"skip",onClick:function(){e.props.skip()}},"Skip"))}}]),a}(n.Component),W=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={pageIndex:1},n.incrementPage=n.incrementPage.bind(Object(c.a)(n)),n.decrementPage=n.decrementPage.bind(Object(c.a)(n)),n.skip=n.skip.bind(Object(c.a)(n)),n}return Object(l.a)(a,[{key:"componentDidMount",value:function(){}},{key:"incrementPage",value:function(){var e=this.state.pageIndex+1;this.setState({pageIndex:e})}},{key:"decrementPage",value:function(){var e=this.state.pageIndex-1;this.setState({pageIndex:e})}},{key:"skip",value:function(){this.setState({pageIndex:1}),this.props.closeTutorial()}},{key:"render",value:function(){switch(this.state.pageIndex){case 1:this.tutorialForm=r.a.createElement(T,{incrementPage:this.incrementPage,skip:this.skip});break;case 2:this.tutorialForm=r.a.createElement(H,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 3:this.tutorialForm=r.a.createElement(B,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 4:this.tutorialForm=r.a.createElement(M,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 5:this.tutorialForm=r.a.createElement(I,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 6:this.tutorialForm=r.a.createElement(G,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 7:this.tutorialForm=r.a.createElement(_,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 8:this.tutorialForm=r.a.createElement(R,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 9:this.tutorialForm=r.a.createElement(q,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 10:this.tutorialForm=r.a.createElement(V,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 11:this.tutorialForm=r.a.createElement(z,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;case 12:this.tutorialForm=r.a.createElement(U,{incrementPage:this.incrementPage,decrementPage:this.decrementPage,skip:this.skip});break;default:this.tutorialForm=null}return this.tutorialForm}}]),a}(n.Component),L=(a(32),function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={},n}return Object(l.a)(a,[{key:"getAlgorithmDescription",value:function(e){return"A*"===e?"A*: a balance of Greedy and Dijkstra. Uses both the start and end node to expand based on a heuristic. Returns the shortest path.":"Dijkstra"===e?"Dijkstra: stays as close as possible to the start node and expands outwards. Returns the shortest path.":"GBF"===e?"Greedy-Best-First: an aggressive algorithm that expands to the node closest to the end node. Will not always return the shortest path.":"BFS"===e?"Breadth-First-Search: doesn't use the start or end node for expansion, but rather grows level by level. Returns the shortest path.":"DFS"===e?"Depth-First-Search: a very bad algorithm for pathfinding since it has no sense of direction. Will not return the shortest path unless you are lucky.":""}},{key:"render",value:function(){var e=this.props.activeAlgorithm,t=this.getAlgorithmDescription(e);return r.a.createElement("div",{className:"descriptionContainer"},r.a.createElement("b",null,t))}}]),a}(n.Component)),Q=(a(8),function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"A*"),r.a.createElement("img",{className:"algorithm-image",src:a(33),alt:"A* example"}),r.a.createElement("p",{className:"paragraph"},"A* aims to find the shortest path from the start node to the end node. It explores each node starting with the ones with the smallest heuristic cost. The huerstic function for the implemented algorithm was simply the known distance g(n) from the start node to the current explored node (which starts at 0) in addition to the the euclidean distance h(n) from the current explored node to the end node. This formula f(n) = g(n) + h(n), gives us an estimation of how short the path f(n) is if we were to use that explored node (marked in blue above). A min heap is used to efficiently sort each one of the nodes by their smallest hueristic function which are then removed after all of the nodes' neighbors have been visited. A* is considered a balance between Dijkstra and Greedy.",r.a.createElement("br",null)," The code for the implementation of A* can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/algorithms/Astar.js",target:"_blank",rel:"noopener noreferrer"},"A*")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component)),J=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Dijkstra"),r.a.createElement("img",{className:"algorithm-image",src:a(34),alt:"Dijkstra example"}),r.a.createElement("p",{className:"paragraph"},"Dijkstra aims to find the shortest path from the start node to the end node. It explores each node starting with the ones with the smallest heuristic cost and will find the shortest path to each node. The huerstic function for the implemented algorithm was simply the known distance g(n) from the start node to the current explored node (which starts at 0). This formula f(n) = h(n), gives us an estimation of how close the path of the explored node (marked in blue above) is to the start node. Dijkstra will visit each unvisted node and update it if it has smaller f(n). As a result, Dijkstra tries to cover as many cells as it can until it reaches the end node, staying as close as it can to the start node. A min heap is used to efficiently sort each one of the nodes by their smallest hueristic function which are removed when the nodes' neighbors have all been visited. Dijkstra is regarded as one of the most commonly used pathfinding algorithms.",r.a.createElement("br",null)," The code for the implementation of Dijkstra can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/algorithms/Dijkstra.js",target:"_blank",rel:"noopener noreferrer"},"Dijkstra")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component),Y=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Greedy-Best-First"),r.a.createElement("img",{className:"algorithm-image",src:a(35),alt:"GBF example"}),r.a.createElement("p",{className:"paragraph"},"Greedy-Best-First aims to find a path from the start node to the end node. It is extemely aggressive and speedy, but at the cost that it won't find the shortest path everytime. It explores each node starting with the ones with the smallest heuristic cost and updates them with their parent node (where it came from) if a lower hueristic distance is found. The huerstic function for the implemented algorithm was simply the euclidean distance h(n) from the current explored node (which starts at 0) to the end node. This formula f(n) = h(n), gives us an estimation of how close we are to the end node at the current explored node (marked in blue). A min heap is used to efficiently sort each one of the nodes by their smallest hueristic function which are removed when all of the nodes' neighbors have been visited. Greedy-Best-First can be considerably faster than other algorithms if a path (not always the shortest) is desired.",r.a.createElement("br",null)," The code for the implementation of Greedy-Best-First can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/algorithms/GreedyBestFirst.js",target:"_blank",rel:"noopener noreferrer"},"Greedy-Best-First")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component),$=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Breadth-First-Search"),r.a.createElement("img",{className:"algorithm-image",src:a(36),alt:"BFS example"}),r.a.createElement("p",{className:"paragraph"},"Breadth-First-Search aims to find the shortest path from the start node to the end node. The BFS expores nodes level by level, and updates each node with their parent (where they came from) with each new visit. Levels are defined as multiple nodes with the same exact distance to the start node. Expanding level by level forces the algorithm to return the shortest path when it finally hits the end node, since the level distances are the same. The BFS uses a queue to keep track of this level ordering of nodes. When all of the nodes' neighbors have been visited it will be removed from the queue. BFS may be slower than others with heuristics but it is easier to implement. However, it is still fully effective in producing an accurate shortest path.",r.a.createElement("br",null)," The code for the implementation of BFS can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/algorithms/BFS.js",target:"_blank",rel:"noopener noreferrer"},"Breath-First-Search")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component),K=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"Depth-First-Search"),r.a.createElement("img",{className:"algorithm-image",src:a(37),alt:"DFS example"}),r.a.createElement("p",{className:"paragraph"},'The Depth-First-Search, while very applicable and useful in many situations, is not a great algorithm for pathfinding. The DFS has the characteristic of exploring whatever it sees first. This produces no real direction and a guess of where the end node is. The result is a random path as the DFS will eventually reach the end as it seaches all nodes and updates its parents. A stack or recursion is used to keep track of these nodes to keep the "first-come first-serve" order. When all of the nodes\' neighbors have been visited it will be removed from the stack. The DFS would not be used in pathfinding but this still provides a nice visual of how the algorithm searches graphs.',r.a.createElement("br",null)," The code for the implementation of DFS can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/algorithms/DFS.js",target:"_blank",rel:"noopener noreferrer"},"Depth-First-Search")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component),X=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={},n.close=n.close.bind(Object(c.a)(n)),n}return Object(l.a)(a,[{key:"componentDidMount",value:function(){}},{key:"close",value:function(){this.props.closeAboutAlgorithm()}},{key:"render",value:function(){switch(this.props.aboutAlgorithm){case"A*":this.algorithmForm=r.a.createElement(Q,{close:this.close});break;case"Dijkstra":this.algorithmForm=r.a.createElement(J,{close:this.close});break;case"GBF":this.algorithmForm=r.a.createElement(Y,{close:this.close});break;case"BFS":this.algorithmForm=r.a.createElement($,{close:this.close});break;case"DFS":this.algorithmForm=r.a.createElement(K,{close:this.close});break;default:this.algorithmForm=null}return this.algorithmForm}}]),a}(n.Component),Z=(a(10),function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"The Stack"),r.a.createElement("img",{className:"stack-image",src:a(38),alt:"Stack example"}),r.a.createElement("p",{className:"paragraph"},"The stack can be thought of a physical stack of books. As you place books on top of each other you can only take off the top book in order to remove things from the stack. This allows us to keep the Last-In First-Out ordering and also makes removing and inserting from the stack very efficient (constant, since we only need to keep track of the top item). Here, push adds an item and pop removes an item. The peek method returns the current top item in the stack. In our case, the red items in the above image can be thought of each grid cell in the search. The stack can be seen in action with Depth-First-Search algorithm.",r.a.createElement("br",null)," The code for the implemented stack can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/structures/Stack.js",target:"_blank",rel:"noopener noreferrer"},"Stack")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component)),ee=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"The Queue"),r.a.createElement("img",{className:"queue-image",src:a(39),alt:"Queue example"}),r.a.createElement("p",{className:"paragraph"},'The queue resembles that of the "first-come, first-serve" or a line of people waiting to purchase something. This allows us to keep the First-In First-Out ordering and also makes removing and inserting from the queue very efficient (constant, since we only need to keep track of the front item). Here, enqueue (push) adds an item to the back of the queue and deqeue (pop) removes an item from the front of the queue. The peek (front) method returns the current front item in the queue. In our case, the items in the above image can be thought of each grid cell in the search. The queue can be seen in action with the Breadth-First-Search algorithm.',r.a.createElement("br",null)," The code for the implemented queue can be found here:\xa0",r.a.createElement("a",{href:"https://github.com/MilanFatschel/Pathfinder_Simulator/blob/master/src/structures/Queue.js",target:"_blank",rel:"noopener noreferrer"},"Queue")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component),te=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).state={},a}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"tutorial"},r.a.createElement("h3",{className:"title"},"The Heap"),r.a.createElement("img",{className:"heap-image",src:a(40),alt:"Heap example"}),r.a.createElement("p",{className:"paragraph"},'The heap can be thought of as an efficient structure that keeps track of a minimum or maximum element in a list or array. Heaps are useful when quick and constant access is needed to this minimum or maximum element. Heaps use trees as seen above, to either "bubble up" or "bubble down" an element when it is inserted or removed. The binary tree allows us to remove and insert items in log(n) time and access the minimum or maximum element in constant time. This can be much more efficent than having to sort every element. A*, Dijkstra, and Greedy-Best-First all use the heap to keep track of their minimum heuristic element or the best path at that time!',r.a.createElement("br",null)," The code for the implemented heap can be found here (heap-js library):\xa0",r.a.createElement("a",{href:"https://github.com/ignlg/heap-js/blob/master/dist/heap-js.es5.js",target:"_blank",rel:"noopener noreferrer"},"Heap")),r.a.createElement("button",{className:"next",onClick:function(){e.props.close()}},"Close"))}}]),n}(n.Component),ae=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={},n.close=n.close.bind(Object(c.a)(n)),n}return Object(l.a)(a,[{key:"componentDidMount",value:function(){}},{key:"close",value:function(){this.props.closeAboutDataStructure()}},{key:"render",value:function(){switch(this.props.aboutDataStructure){case"Stack":this.dataStructureForm=r.a.createElement(Z,{close:this.close});break;case"Queue":this.dataStructureForm=r.a.createElement(ee,{close:this.close});break;case"Heap":this.dataStructureForm=r.a.createElement(te,{close:this.close});break;default:this.dataStructureForm=null}return this.dataStructureForm}}]),a}(n.Component),ne=function(e){Object(u.a)(a,e);var t=Object(h.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e)).state={activeAlgorithm:"A*",aboutAlgorithm:"",aboutDataStructure:"",simulatorSpeed:1,tutorialEnabled:!0,mouseHold:!1},n.onClickAlgorithm=n.onClickAlgorithm.bind(Object(c.a)(n)),n.onClickSpeed=n.onClickSpeed.bind(Object(c.a)(n)),n.onClickAboutAlgorithm=n.onClickAboutAlgorithm.bind(Object(c.a)(n)),n.onClickAboutDataStructure=n.onClickAboutDataStructure.bind(Object(c.a)(n)),n.createTutorialEvent=n.createTutorialEvent.bind(Object(c.a)(n)),n.closeTutorial=n.closeTutorial.bind(Object(c.a)(n)),n.closeAboutAlgorithm=n.closeAboutAlgorithm.bind(Object(c.a)(n)),n.closeAboutDataStructure=n.closeAboutDataStructure.bind(Object(c.a)(n)),n.mouseHoldOnEvent=n.mouseHoldOnEvent.bind(Object(c.a)(n)),n.mouseHoldOffEvent=n.mouseHoldOffEvent.bind(Object(c.a)(n)),n}return Object(l.a)(a,[{key:"onComponentDidMount",value:function(){}},{key:"createTutorialEvent",value:function(){this.setState({tutorialEnabled:!0})}},{key:"onClickAlgorithm",value:function(e,t){e.preventDefault(),this.setState({activeAlgorithm:t})}},{key:"onClickSpeed",value:function(e,t){e.preventDefault(),this.setState({simulatorSpeed:t})}},{key:"onClickAboutAlgorithm",value:function(e){this.setState({aboutAlgorithm:e,aboutAlgorithmEnabled:!0})}},{key:"onClickAboutDataStructure",value:function(e){this.setState({aboutDataStructure:e,aboutDataStructureEnabled:!0})}},{key:"closeAboutAlgorithm",value:function(){this.setState({aboutAlgorithm:"",aboutAlgorithmEnabled:!1})}},{key:"closeAboutDataStructure",value:function(){this.setState({aboutDataStructure:"",aboutDataStructureEnabled:!1})}},{key:"closeTutorial",value:function(){this.setState({tutorialEnabled:!1})}},{key:"mouseHoldOnEvent",value:function(){this.setState({mouseHold:!0})}},{key:"mouseHoldOffEvent",value:function(){this.setState({mouseHold:!1})}},{key:"render",value:function(){var e=this.state,t=e.tutorialEnabled,a=e.mouseHold,n=e.aboutAlgorithmEnabled,o=e.aboutDataStructureEnabled,s=e.aboutAlgorithm,i=e.aboutDataStructure,l=e.activeAlgorithm,c=e.simulatorSpeed;return r.a.createElement("div",null,t?r.a.createElement(W,{closeTutorial:this.closeTutorial}):r.a.createElement("div",null),s.length>0?r.a.createElement(X,{aboutAlgorithm:s,closeAboutAlgorithm:this.closeAboutAlgorithm}):r.a.createElement("div",null),i.length>0?r.a.createElement(ae,{aboutDataStructure:i,closeAboutDataStructure:this.closeAboutDataStructure}):r.a.createElement("div",null),r.a.createElement(m,{tutorialEnabled:t,mouseHold:a,aboutAlgorithmEnabled:n,aboutDataStructureEnabled:o,activeAlgorithm:l,simulatorSpeed:c,onClickAlgorithm:this.onClickAlgorithm,onClickSpeed:this.onClickSpeed,createTutorialEvent:this.createTutorialEvent,onClickAboutAlgorithm:this.onClickAboutAlgorithm,onClickAboutDataStructure:this.onClickAboutDataStructure}),r.a.createElement(L,{activeAlgorithm:l}),r.a.createElement(j,{tutorialEnabled:t,aboutAlgorithmEnabled:n,aboutDataStructureEnabled:o,activeAlgorithm:l,simulatorSpeed:c,mouseHoldOnEvent:this.mouseHoldOnEvent,mouseHoldOffEvent:this.mouseHoldOffEvent}))}}]),a}(n.Component);var re=function(){return r.a.createElement(ne,null)};a(41),Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(re,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[13,1,2]]]);
//# sourceMappingURL=main.4f32da5c.chunk.js.map