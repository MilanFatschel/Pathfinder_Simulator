{"ast":null,"code":"// Custom stack implementation\nimport React, { Component } from \"react\";\nexport default class Stack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  push(element) {\n    // adding element to the queue\n    this.state.items.push(element);\n  }\n\n  pop() {\n    // removing element from the queue\n    // returns underflow when called\n    // on empty queue\n    if (this.isEmpty()) return \"Underflow\";\n    return this.state.items.pop();\n  }\n\n  top() {\n    // returns the Front element of\n    // the queue without removing it.\n    if (this.isEmpty()) return \"No elements in Stack\";\n    return this.state.items[this.items.length - 1];\n  }\n\n  isEmpty() {\n    // return true if the queue is empty.\n    return this.state.items.length == 0;\n  }\n\n  render() {\n    return;\n  }\n\n}","map":{"version":3,"sources":["/Users/milanfatschel/Desktop/pathfinder_visualization/src/structures/stack.js"],"names":["React","Component","Stack","constructor","props","state","items","push","element","pop","isEmpty","top","length","render"],"mappings":"AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,IAAI,CAACC,OAAD,EAAU;AACZ;AACA,SAAKH,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsBC,OAAtB;AACD;;AAEDC,EAAAA,GAAG,GAAG;AACJ;AACA;AACA;AACA,QAAI,KAAKC,OAAL,EAAJ,EAAoB,OAAO,WAAP;AACpB,WAAO,KAAKL,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,EAAP;AACD;;AAEDE,EAAAA,GAAG,GAAG;AACJ;AACA;AACA,QAAI,KAAKD,OAAL,EAAJ,EAAoB,OAAO,sBAAP;AACpB,WAAO,KAAKL,KAAL,CAAWC,KAAX,CAAiB,KAAKA,KAAL,CAAWM,MAAX,GAAoB,CAArC,CAAP;AACD;;AAEDF,EAAAA,OAAO,GAAG;AACR;AACA,WAAO,KAAKL,KAAL,CAAWC,KAAX,CAAiBM,MAAjB,IAA2B,CAAlC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACD;;AAnC0C","sourcesContent":["// Custom stack implementation\n\nimport React, { Component } from \"react\";\n\nexport default class Stack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n  }\n\n  push(element) {\n    // adding element to the queue\n    this.state.items.push(element);\n  }\n\n  pop() {\n    // removing element from the queue\n    // returns underflow when called\n    // on empty queue\n    if (this.isEmpty()) return \"Underflow\";\n    return this.state.items.pop();\n  }\n\n  top() {\n    // returns the Front element of\n    // the queue without removing it.\n    if (this.isEmpty()) return \"No elements in Stack\";\n    return this.state.items[this.items.length - 1];\n  }\n\n  isEmpty() {\n    // return true if the queue is empty.\n    return this.state.items.length == 0;\n  }\n\n  render() {\n    return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}