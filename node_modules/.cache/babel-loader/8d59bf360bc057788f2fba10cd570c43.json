{"ast":null,"code":"var _jsxFileName = \"/Users/milanfatschel/Desktop/pathfinder_visualization/src/components/AboutDataStructure/AboutStack.js\";\nimport React, { Component } from \"react\";\nimport \"./AboutDataStructure.css\";\nexport default class AboutStack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tutorial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"The Stack\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"stack-image\",\n      src: require(\"./../../gifs/stack.gif\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"paragraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"The heap can be thought of as an efficient structure that keeps track of a minimum or maximum element in a list or array. Heaps are useful when quick and constant access is needed to this minimum or maximum element. Heaps use trees as seen above, to either \\\"bubble up\\\" or \\\"bubble down\\\"The stack can be seen in action with Depth-First-Search algorithm.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), \" The code for the implemented stack can be found here:\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/MilanFatschel/PathFinder_Algorithm_Visualization/blob/master/src/structures/stack.js\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Stack\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"next\",\n      onClick: () => {\n        this.props.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Close\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/milanfatschel/Desktop/pathfinder_visualization/src/components/AboutDataStructure/AboutStack.js"],"names":["React","Component","AboutStack","constructor","props","state","render","require","close"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,0BAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAChDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,GAAG,EAAEC,OAAO,CAAC,wBAAD,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2XAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,6EAQE;AACE,MAAA,IAAI,EAAC,yGADP;AAEE,MAAA,MAAM,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CANF,eAqBE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKH,KAAL,CAAWI,KAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBF,CADF;AAgCD;;AAvC+C","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./AboutDataStructure.css\";\n\nexport default class AboutStack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"tutorial\">\n        <h3 className=\"title\">The Stack</h3>\n        <img\n          className=\"stack-image\"\n          src={require(\"./../../gifs/stack.gif\")}\n        ></img>\n        <p className=\"paragraph\">\n          The heap can be thought of as an efficient structure that keeps track\n          of a minimum or maximum element in a list or array. Heaps are useful\n          when quick and constant access is needed to this minimum or maximum\n          element. Heaps use trees as seen above, to either \"bubble up\" or\n          \"bubble down\"The stack can be seen in action with Depth-First-Search\n          algorithm.\n          <br /> The code for the implemented stack can be found here:&nbsp;\n          <a\n            href=\"https://github.com/MilanFatschel/PathFinder_Algorithm_Visualization/blob/master/src/structures/stack.js\"\n            target=\"_blank\"\n          >\n            Stack\n          </a>\n        </p>\n        <button\n          className=\"next\"\n          onClick={() => {\n            this.props.close();\n          }}\n        >\n          Close\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}