{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nexport const isOrientationLandscape = ({\n  width,\n  height\n}) => width > height;\nexport default function (WrappedComponent) {\n  class withOrientation extends React.Component {\n    constructor() {\n      super();\n\n      _defineProperty(this, \"handleOrientationChange\", ({\n        window\n      }) => {\n        const isLandscape = isOrientationLandscape(window);\n        this.setState({\n          isLandscape\n        });\n      });\n\n      const _isLandscape = isOrientationLandscape(Dimensions.get('window'));\n\n      this.state = {\n        isLandscape: _isLandscape\n      };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(WrappedComponent, _extends({}, this.props, this.state));\n    }\n\n  }\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}","map":{"version":3,"sources":["withOrientation.js"],"names":["isOrientationLandscape","height","width","React","constructor","isLandscape","Dimensions","componentDidMount","componentWillUnmount","window","render","hoistNonReactStatic"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,OAAA,mBAAA,MAAA,yBAAA;AAEA,OAAO,MAAMA,sBAAsB,GAAG,CAAC;AAAA,EAAA,KAAA;AAASC,EAAAA;AAAT,CAAD,KAAuBC,KAAK,GAA3D,MAAA;AAEP,eAAe,UAAA,gBAAA,EAA4B;AACzC,QAAA,eAAA,SAA8BC,KAAK,CAAnC,SAAA,CAA8C;AAC5CC,IAAAA,WAAW,GAAG;AACZ;;AADY,MAAA,eAAA,CAAA,IAAA,EAAA,yBAAA,EAeY,CAAC;AAAEK,QAAAA;AAAF,OAAD,KAAgB;AACxC,cAAMJ,WAAW,GAAGL,sBAAsB,CAA1C,MAA0C,CAA1C;AACA,aAAA,QAAA,CAAc;AAAEK,UAAAA;AAAF,SAAd;AAjBY,OAAA,CAAA;;AAGZ,YAAMA,YAAW,GAAGL,sBAAsB,CAACM,UAAU,CAAVA,GAAAA,CAA3C,QAA2CA,CAAD,CAA1C;;AACA,WAAA,KAAA,GAAa;AAAED,QAAAA,WAAW,EAAXA;AAAF,OAAb;AACD;;AAEDE,IAAAA,iBAAiB,GAAG;AAClBD,MAAAA,UAAU,CAAVA,gBAAAA,CAAAA,QAAAA,EAAsC,KAAtCA,uBAAAA;AACD;;AAEDE,IAAAA,oBAAoB,GAAG;AACrBF,MAAAA,UAAU,CAAVA,mBAAAA,CAAAA,QAAAA,EAAyC,KAAzCA,uBAAAA;AACD;;AAODI,IAAAA,MAAM,GAAG;AACP,aAAA,aAAO,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAsB,KAAtB,KAAA,EAAsC,KAA7C,KAAO,CAAA,CAAP;AACD;;AAvB2C;;AA0B9C,SAAOC,mBAAmB,CAAA,eAAA,EAA1B,gBAA0B,CAA1B;AACD","sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function (WrappedComponent) {\n  class withOrientation extends React.Component {\n    constructor() {\n      super();\n\n      const isLandscape = isOrientationLandscape(Dimensions.get('window'));\n      this.state = { isLandscape };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}