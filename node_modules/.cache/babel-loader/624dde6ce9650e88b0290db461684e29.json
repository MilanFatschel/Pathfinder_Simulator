{"ast":null,"code":"var _jsxFileName = \"/Users/milanfatschel/Desktop/pathfinder_visualization/src/components/Display/Display.js\";\nimport React, { Component } from \"react\";\nimport Node from \"./../Node/Node\";\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      nodes: nodes\n    });\n  }\n\n  render() {\n    /*#__PURE__*/\n    React.createElement(\"button\", {\n      onClick: () => this.astar(),\n      Run: true,\n      astar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, nodes.map((row, rowIdx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIdx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, row.map((node, nodeIdx) => {\n        const {\n          isStartNode,\n          isEndNode\n        } = node;\n        return /*#__PURE__*/React.createElement(Node, {\n          key: nodeIdx,\n          isStartNode: isStartNode,\n          isEndNode: isEndNode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }\n        });\n      }));\n    }));\n  }\n\n}\n\nconst createGrid = () => {\n  // Display Grid and Nodes\n  const grid = [];\n\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n\n    for (let col = 0; col < 20; col++) {\n      currentRow.push(createNode(row, col));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n};\n\nconst createNewNode = (col, row) => {\n  const newNode = {\n    col,\n    row,\n    g: Infinity,\n    h: Infinity,\n    isStartNode: row === 0 && col === 0,\n    isEndNode: row === 19 && col === 19,\n    isVisited: false,\n    isObstacle: false,\n    neighbors: null,\n    parentNode: null\n  };\n};","map":{"version":3,"sources":["/Users/milanfatschel/Desktop/pathfinder_visualization/src/components/Display/Display.js"],"names":["React","Component","Node","Display","constructor","props","state","nodes","componentDidMount","setState","render","astar","map","row","rowIdx","node","nodeIdx","isStartNode","isEndNode","createGrid","grid","currentRow","col","push","createNode","createNewNode","newNode","g","Infinity","h","isVisited","isObstacle","neighbors","parentNode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC7CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP;AAAA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,EAAvB;AAAqC,MAAA,GAAG,MAAxC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACK,GAAN,CAAU,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC1B,0BACE;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAOC,OAAP,KAAmB;AAC1B,cAAM;AAAEC,UAAAA,WAAF;AAAeC,UAAAA;AAAf,YAA6BH,IAAnC;AACA,4BACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEC,OADP;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,SAAS,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OATA,CADH,CADF;AAcD,KAfA,CADH,CADF;AAoBD;;AAlC4C;;AAqC/C,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIP,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,UAAMQ,UAAU,GAAG,EAAnB;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjCD,MAAAA,UAAU,CAACE,IAAX,CAAgBC,UAAU,CAACX,GAAD,EAAMS,GAAN,CAA1B;AACD;;AACDF,IAAAA,IAAI,CAACG,IAAL,CAAUF,UAAV;AACD;;AACD,SAAOD,IAAP;AACD,CAXD;;AAaA,MAAMK,aAAa,GAAG,CAACH,GAAD,EAAMT,GAAN,KAAc;AAClC,QAAMa,OAAO,GAAG;AACdJ,IAAAA,GADc;AAEdT,IAAAA,GAFc;AAGdc,IAAAA,CAAC,EAAEC,QAHW;AAIdC,IAAAA,CAAC,EAAED,QAJW;AAKdX,IAAAA,WAAW,EAAEJ,GAAG,KAAK,CAAR,IAAaS,GAAG,KAAK,CALpB;AAMdJ,IAAAA,SAAS,EAAEL,GAAG,KAAK,EAAR,IAAcS,GAAG,KAAK,EANnB;AAOdQ,IAAAA,SAAS,EAAE,KAPG;AAQdC,IAAAA,UAAU,EAAE,KARE;AASdC,IAAAA,SAAS,EAAE,IATG;AAUdC,IAAAA,UAAU,EAAE;AAVE,GAAhB;AAYD,CAbD","sourcesContent":["import React, { Component } from \"react\";\n\nimport Node from \"./../Node/Node\";\n\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ nodes: nodes });\n  }\n\n  render() {\n    <button onClick={() => this.astar()} Run astar></button>;\n    return (\n      <div className=\"grid\">\n        {nodes.map((row, rowIdx) => {\n          return (\n            <div key={rowIdx}>\n              {row.map((node, nodeIdx) => {\n                const { isStartNode, isEndNode } = node;\n                return (\n                  <Node\n                    key={nodeIdx}\n                    isStartNode={isStartNode}\n                    isEndNode={isEndNode}\n                  ></Node>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst createGrid = () => {\n  // Display Grid and Nodes\n  const grid = [];\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 20; col++) {\n      currentRow.push(createNode(row, col));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\n\nconst createNewNode = (col, row) => {\n  const newNode = {\n    col,\n    row,\n    g: Infinity,\n    h: Infinity,\n    isStartNode: row === 0 && col === 0,\n    isEndNode: row === 19 && col === 19,\n    isVisited: false,\n    isObstacle: false,\n    neighbors: null,\n    parentNode: null,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}