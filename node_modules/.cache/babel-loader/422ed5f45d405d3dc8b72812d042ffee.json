{"ast":null,"code":"var _jsxFileName = \"/Users/milanfatschel/Desktop/pathfinder_visualization/src/components/Tutorial/AboutPathFinding.js\";\nimport React, { Component } from \"react\";\nimport \"./Tutorial.css\";\nexport default class AboutPathFinding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tutorial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"What is Pathfinding?\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"small-image\",\n      src: require(\"./../../gifs/bfs.gif\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"paragraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Pathfinding algorithms seek to find a path from a starting point to an end point. Some path algorithms are tuned to find the shortest path while others just find an available path. You can click on the \\\"About Pathfinding Algorithms\\\" dropdown to learn more about each algorithm and how they individually work. Some of these algorithms are used by routing apps such as Uber, Lyft, and Google Maps. Their search algorithms will quickly search the area and use roads as an agent to expand to the destination. In our case, we will just use grid cells as our \\\"available roads\\\" to keep things simple. Click next to learn about the controls of the simulator!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"2/12\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"next\",\n      onClick: () => {\n        this.props.incrementPage();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"previous\",\n      onClick: () => {\n        this.props.decrementPage();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skip\",\n      onClick: () => {\n        this.props.skip();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Skip\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/milanfatschel/Desktop/pathfinder_visualization/src/components/Tutorial/AboutPathFinding.js"],"names":["React","Component","AboutPathFinding","constructor","props","state","render","require","incrementPage","decrementPage","skip"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,gBAAP;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AACtDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,GAAG,EAAEC,OAAO,CAAC,sBAAD,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wpBANF,eAkBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKH,KAAL,CAAWI,aAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA2BE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKJ,KAAL,CAAWK,aAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF,eAmCE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKL,KAAL,CAAWM,IAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,CADF;AA8CD;;AArDqD","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Tutorial.css\";\n\nexport default class AboutPathFinding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"tutorial\">\n        <h3 className=\"title\">What is Pathfinding?</h3>\n        <img\n          className=\"small-image\"\n          src={require(\"./../../gifs/bfs.gif\")}\n        ></img>\n        <p className=\"paragraph\">\n          Pathfinding algorithms seek to find a path from a starting point to an\n          end point. Some path algorithms are tuned to find the shortest path\n          while others just find an available path. You can click on the \"About\n          Pathfinding Algorithms\" dropdown to learn more about each algorithm\n          and how they individually work. Some of these algorithms are used by\n          routing apps such as Uber, Lyft, and Google Maps. Their search\n          algorithms will quickly search the area and use roads as an agent to\n          expand to the destination. In our case, we will just use grid cells as\n          our \"available roads\" to keep things simple. Click next to learn about\n          the controls of the simulator!\n        </p>\n        <div className=\"page\">2/12</div>\n        <button\n          className=\"next\"\n          onClick={() => {\n            this.props.incrementPage();\n          }}\n        >\n          Next\n        </button>\n        <button\n          className=\"previous\"\n          onClick={() => {\n            this.props.decrementPage();\n          }}\n        >\n          Previous\n        </button>\n        <button\n          className=\"skip\"\n          onClick={() => {\n            this.props.skip();\n          }}\n        >\n          Skip\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}