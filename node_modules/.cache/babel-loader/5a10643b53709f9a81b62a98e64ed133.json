{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { StatusBar, Text, TextInput } from 'react-native';\nimport { ThemeContext, ThemeColors } from '@react-navigation/core';\n\nclass ThemedText extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Text, _extends({}, this.props, {\n      style: [{\n        color: ThemeColors[this.context].label\n      }, this.props.style]\n    }));\n  }\n\n}\n\n_defineProperty(ThemedText, \"contextType\", ThemeContext);\n\nclass ThemedTextInput extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(TextInput, _extends({}, this.props, {\n      placeholderTextColor: this.context === 'dark' ? '#ebebf54c' : '#3c3c434c',\n      style: [{\n        color: ThemeColors[this.context].label\n      }, this.props.style]\n    }));\n  }\n\n}\n\n_defineProperty(ThemedTextInput, \"contextType\", ThemeContext);\n\nclass ThemedStatusBar extends React.Component {\n  render() {\n    let _this$props = this.props,\n        {\n      barStyle\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"barStyle\"]);\n\n    return /*#__PURE__*/React.createElement(StatusBar, _extends({\n      barStyle: barStyle ? barStyle : this.context === 'dark' ? 'light-content' : 'default'\n    }, props));\n  }\n\n}\n\n_defineProperty(ThemedStatusBar, \"contextType\", ThemeContext);\n\nexport default {\n  Text: ThemedText,\n  StatusBar: ThemedStatusBar,\n  TextInput: ThemedTextInput\n};","map":{"version":3,"sources":["Themed.js"],"names":["ThemedText","React","ThemeContext","render","color","ThemeColors","label","ThemedTextInput","ThemedStatusBar","barStyle","props","Text","StatusBar","TextInput"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,EAAA,IAAA,EAAA,SAAA,QAAA,cAAA;AACA,SAAA,YAAA,EAAA,WAAA,QAAA,wBAAA;;AAEA,MAAA,UAAA,SAAyBC,KAAK,CAA9B,SAAA,CAAyC;AAGvCE,EAAAA,MAAM,GAAG;AACP,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,MAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEC,WAAW,CAAC,KAAZA,OAAW,CAAXA,CAA0BC;AAAnC,OAAD,EAA6C,KAAA,KAAA,CAA7C,KAAA;AAFT,KAAA,CAAA,CADF;AAMD;;AAVsC;;gBAAnCN,U,iBACiBE,Y;;AAYvB,MAAA,eAAA,SAA8BD,KAAK,CAAnC,SAAA,CAA8C;AAG5CE,EAAAA,MAAM,GAAG;AACP,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,MAAA,oBAAoB,EAClB,KAAA,OAAA,KAAA,MAAA,GAAA,WAAA,GAHJ,WAAA;AAKE,MAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEC,WAAW,CAAC,KAAZA,OAAW,CAAXA,CAA0BC;AAAnC,OAAD,EAA6C,KAAA,KAAA,CAA7C,KAAA;AALT,KAAA,CAAA,CADF;AASD;;AAb2C;;gBAAxCC,e,iBACiBL,Y;;AAevB,MAAA,eAAA,SAA8BD,KAAK,CAAnC,SAAA,CAA8C;AAG5CE,EAAAA,MAAM,GAAG;AACP,QAAA,WAAA,GAA6B,KAA7B,KAAA;AAAA,QAAI;AAAEM,MAAAA;AAAF,QAAJ,WAAA;AAAA,QAAmBC,KAAnB,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AACE,MAAA,QAAQ,EACND,QAAQ,GAAA,QAAA,GAEJ,KAAA,OAAA,KAAA,MAAA,GAAA,eAAA,GAEA;AANR,KAAA,EADF,KACE,CAAA,CADF;AAYD;;AAlB2C;;gBAAxCD,e,iBACiBN,Y;;AAoBvB,eAAe;AACbS,EAAAA,IAAI,EADS,UAAA;AAEbC,EAAAA,SAAS,EAFI,eAAA;AAGbC,EAAAA,SAAS,EAAEN;AAHE,CAAf","sourcesContent":["import * as React from 'react';\nimport { StatusBar, Text, TextInput } from 'react-native';\nimport { ThemeContext, ThemeColors } from '@react-navigation/core';\n\nclass ThemedText extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    return (\n      <Text\n        {...this.props}\n        style={[{ color: ThemeColors[this.context].label }, this.props.style]}\n      />\n    );\n  }\n}\n\nclass ThemedTextInput extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    return (\n      <TextInput\n        {...this.props}\n        placeholderTextColor={\n          this.context === 'dark' ? '#ebebf54c' : '#3c3c434c'\n        }\n        style={[{ color: ThemeColors[this.context].label }, this.props.style]}\n      />\n    );\n  }\n}\n\nclass ThemedStatusBar extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    let { barStyle, ...props } = this.props;\n\n    return (\n      <StatusBar\n        barStyle={\n          barStyle\n            ? barStyle\n            : this.context === 'dark'\n            ? 'light-content'\n            : 'default'\n        }\n        {...props}\n      />\n    );\n  }\n}\n\nexport default {\n  Text: ThemedText,\n  StatusBar: ThemedStatusBar,\n  TextInput: ThemedTextInput,\n};\n"]},"metadata":{},"sourceType":"module"}